// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: actions/Login.proto

package dalalstreet.api.actions;

import dalalstreet.api.models.Stock;
import dalalstreet.api.models.User;

/**
 * Protobuf type {@code proto.LoginResponse}
 */
public  final class LoginResponse extends
    com.google.protobuf.GeneratedMessageLite<
            LoginResponse, LoginResponse.Builder> implements
    // @@protoc_insertion_point(message_implements:proto.LoginResponse)
        LoginResponseOrBuilder {
  private LoginResponse() {
    statusMessage_ = "";
    sessionId_ = "";
    marketIsOpenHackyNotif_ = "";
    marketIsClosedHackyNotif_ = "";
  }
  /**
   * Protobuf enum {@code proto.LoginResponse.StatusCode}
   */
  public enum StatusCode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>OK = 0;</code>
     */
    OK(0),
    /**
     * <code>InternalServerError = 1;</code>
     */
    InternalServerError(1),
    /**
     * <code>InvalidCredentialsError = 2;</code>
     */
    InvalidCredentialsError(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OK = 0;</code>
     */
    public static final int OK_VALUE = 0;
    /**
     * <code>InternalServerError = 1;</code>
     */
    public static final int InternalServerError_VALUE = 1;
    /**
     * <code>InvalidCredentialsError = 2;</code>
     */
    public static final int InvalidCredentialsError_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static StatusCode valueOf(int value) {
      return forNumber(value);
    }

    public static StatusCode forNumber(int value) {
      switch (value) {
        case 0: return OK;
        case 1: return InternalServerError;
        case 2: return InvalidCredentialsError;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StatusCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        StatusCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<StatusCode>() {
            public StatusCode findValueByNumber(int number) {
              return StatusCode.forNumber(number);
            }
          };

    private final int value;

    private StatusCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:proto.LoginResponse.StatusCode)
  }

  private int bitField0_;
  public static final int STATUS_CODE_FIELD_NUMBER = 1;
  private int statusCode_;
  /**
   * <code>optional .proto.LoginResponse.StatusCode status_code = 1;</code>
   */
  public int getStatusCodeValue() {
    return statusCode_;
  }
  /**
   * <code>optional .proto.LoginResponse.StatusCode status_code = 1;</code>
   */
  public LoginResponse.StatusCode getStatusCode() {
    LoginResponse.StatusCode result = LoginResponse.StatusCode.forNumber(statusCode_);
    return result == null ? LoginResponse.StatusCode.UNRECOGNIZED : result;
  }
  /**
   * <code>optional .proto.LoginResponse.StatusCode status_code = 1;</code>
   */
  private void setStatusCodeValue(int value) {
      statusCode_ = value;
  }
  /**
   * <code>optional .proto.LoginResponse.StatusCode status_code = 1;</code>
   */
  private void setStatusCode(LoginResponse.StatusCode value) {
    if (value == null) {
      throw new NullPointerException();
    }

    statusCode_ = value.getNumber();
  }
  /**
   * <code>optional .proto.LoginResponse.StatusCode status_code = 1;</code>
   */
  private void clearStatusCode() {

    statusCode_ = 0;
  }

  public static final int STATUS_MESSAGE_FIELD_NUMBER = 2;
  private String statusMessage_;
  /**
   * <code>optional string status_message = 2;</code>
   */
  public String getStatusMessage() {
    return statusMessage_;
  }
  /**
   * <code>optional string status_message = 2;</code>
   */
  public com.google.protobuf.ByteString
      getStatusMessageBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(statusMessage_);
  }
  /**
   * <code>optional string status_message = 2;</code>
   */
  private void setStatusMessage(
      String value) {
    if (value == null) {
    throw new NullPointerException();
  }

    statusMessage_ = value;
  }
  /**
   * <code>optional string status_message = 2;</code>
   */
  private void clearStatusMessage() {

    statusMessage_ = getDefaultInstance().getStatusMessage();
  }
  /**
   * <code>optional string status_message = 2;</code>
   */
  private void setStatusMessageBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

    statusMessage_ = value.toStringUtf8();
  }

  public static final int SESSION_ID_FIELD_NUMBER = 3;
  private String sessionId_;
  /**
   * <code>optional string session_id = 3;</code>
   */
  public String getSessionId() {
    return sessionId_;
  }
  /**
   * <code>optional string session_id = 3;</code>
   */
  public com.google.protobuf.ByteString
      getSessionIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(sessionId_);
  }
  /**
   * <code>optional string session_id = 3;</code>
   */
  private void setSessionId(
      String value) {
    if (value == null) {
    throw new NullPointerException();
  }

    sessionId_ = value;
  }
  /**
   * <code>optional string session_id = 3;</code>
   */
  private void clearSessionId() {

    sessionId_ = getDefaultInstance().getSessionId();
  }
  /**
   * <code>optional string session_id = 3;</code>
   */
  private void setSessionIdBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

    sessionId_ = value.toStringUtf8();
  }

  public static final int USER_FIELD_NUMBER = 4;
  private User user_;
  /**
   * <code>optional .proto.User user = 4;</code>
   */
  public boolean hasUser() {
    return user_ != null;
  }
  /**
   * <code>optional .proto.User user = 4;</code>
   */
  public User getUser() {
    return user_ == null ? User.getDefaultInstance() : user_;
  }
  /**
   * <code>optional .proto.User user = 4;</code>
   */
  private void setUser(User value) {
    if (value == null) {
      throw new NullPointerException();
    }
    user_ = value;

    }
  /**
   * <code>optional .proto.User user = 4;</code>
   */
  private void setUser(
      User.Builder builderForValue) {
    user_ = builderForValue.build();

  }
  /**
   * <code>optional .proto.User user = 4;</code>
   */
  private void mergeUser(User value) {
    if (user_ != null &&
        user_ != User.getDefaultInstance()) {
      user_ =
        User.newBuilder(user_).mergeFrom(value).buildPartial();
    } else {
      user_ = value;
    }

  }
  /**
   * <code>optional .proto.User user = 4;</code>
   */
  private void clearUser() {  user_ = null;

  }

  public static final int STOCKS_OWNED_FIELD_NUMBER = 5;
  private static final class StocksOwnedDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        Integer, Integer> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<Integer, Integer>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0,
                com.google.protobuf.WireFormat.FieldType.INT32,
                0);
  }
  private com.google.protobuf.MapFieldLite<
      Integer, Integer> stocksOwned_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<Integer, Integer>
  internalGetStocksOwned() {
    return stocksOwned_;
  }
  private com.google.protobuf.MapFieldLite<Integer, Integer>
  internalGetMutableStocksOwned() {
    if (!stocksOwned_.isMutable()) {
      stocksOwned_ = stocksOwned_.mutableCopy();
    }
    return stocksOwned_;
  }

  public int getStocksOwnedCount() {
    return internalGetStocksOwned().size();
  }
  /**
   * <code>map&lt;uint32, int32&gt; stocks_owned = 5;</code>
   */

  public boolean containsStocksOwned(
      int key) {

    return internalGetStocksOwned().containsKey(key);
  }
  /**
   * Use {@link #getStocksOwnedMap()} instead.
   */
  @Deprecated
  public java.util.Map<Integer, Integer> getStocksOwned() {
    return getStocksOwnedMap();
  }
  /**
   * <code>map&lt;uint32, int32&gt; stocks_owned = 5;</code>
   */

  public java.util.Map<Integer, Integer> getStocksOwnedMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetStocksOwned());
  }
  /**
   * <code>map&lt;uint32, int32&gt; stocks_owned = 5;</code>
   */

  public int getStocksOwnedOrDefault(
      int key,
      int defaultValue) {

    java.util.Map<Integer, Integer> map =
        internalGetStocksOwned();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;uint32, int32&gt; stocks_owned = 5;</code>
   */

  public int getStocksOwnedOrThrow(
      int key) {

    java.util.Map<Integer, Integer> map =
        internalGetStocksOwned();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;uint32, int32&gt; stocks_owned = 5;</code>
   */
  private java.util.Map<Integer, Integer>
  getMutableStocksOwnedMap() {
    return internalGetMutableStocksOwned();
  }

  public static final int STOCK_LIST_FIELD_NUMBER = 6;
  private static final class StockListDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        Integer, Stock> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<Integer, Stock>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                Stock.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      Integer, Stock> stockList_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<Integer, Stock>
  internalGetStockList() {
    return stockList_;
  }
  private com.google.protobuf.MapFieldLite<Integer, Stock>
  internalGetMutableStockList() {
    if (!stockList_.isMutable()) {
      stockList_ = stockList_.mutableCopy();
    }
    return stockList_;
  }

  public int getStockListCount() {
    return internalGetStockList().size();
  }
  /**
   * <code>map&lt;uint32, .proto.Stock&gt; stock_list = 6;</code>
   */

  public boolean containsStockList(
      int key) {

    return internalGetStockList().containsKey(key);
  }
  /**
   * Use {@link #getStockListMap()} instead.
   */
  @Deprecated
  public java.util.Map<Integer, Stock> getStockList() {
    return getStockListMap();
  }
  /**
   * <code>map&lt;uint32, .proto.Stock&gt; stock_list = 6;</code>
   */

  public java.util.Map<Integer, Stock> getStockListMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetStockList());
  }
  /**
   * <code>map&lt;uint32, .proto.Stock&gt; stock_list = 6;</code>
   */

  public Stock getStockListOrDefault(
      int key,
      Stock defaultValue) {

    java.util.Map<Integer, Stock> map =
        internalGetStockList();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;uint32, .proto.Stock&gt; stock_list = 6;</code>
   */

  public Stock getStockListOrThrow(
      int key) {

    java.util.Map<Integer, Stock> map =
        internalGetStockList();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;uint32, .proto.Stock&gt; stock_list = 6;</code>
   */
  private java.util.Map<Integer, Stock>
  getMutableStockListMap() {
    return internalGetMutableStockList();
  }

  public static final int CONSTANTS_FIELD_NUMBER = 7;
  private static final class ConstantsDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        String, Integer> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<String, Integer>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.INT32,
                0);
  }
  private com.google.protobuf.MapFieldLite<
      String, Integer> constants_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<String, Integer>
  internalGetConstants() {
    return constants_;
  }
  private com.google.protobuf.MapFieldLite<String, Integer>
  internalGetMutableConstants() {
    if (!constants_.isMutable()) {
      constants_ = constants_.mutableCopy();
    }
    return constants_;
  }

  public int getConstantsCount() {
    return internalGetConstants().size();
  }
  /**
   * <code>map&lt;string, int32&gt; constants = 7;</code>
   */

  public boolean containsConstants(
      String key) {
    if (key == null) { throw new NullPointerException(); }
    return internalGetConstants().containsKey(key);
  }
  /**
   * Use {@link #getConstantsMap()} instead.
   */
  @Deprecated
  public java.util.Map<String, Integer> getConstants() {
    return getConstantsMap();
  }
  /**
   * <code>map&lt;string, int32&gt; constants = 7;</code>
   */

  public java.util.Map<String, Integer> getConstantsMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetConstants());
  }
  /**
   * <code>map&lt;string, int32&gt; constants = 7;</code>
   */

  public int getConstantsOrDefault(
      String key,
      int defaultValue) {
    if (key == null) { throw new NullPointerException(); }
    java.util.Map<String, Integer> map =
        internalGetConstants();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, int32&gt; constants = 7;</code>
   */

  public int getConstantsOrThrow(
      String key) {
    if (key == null) { throw new NullPointerException(); }
    java.util.Map<String, Integer> map =
        internalGetConstants();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;string, int32&gt; constants = 7;</code>
   */
  private java.util.Map<String, Integer>
  getMutableConstantsMap() {
    return internalGetMutableConstants();
  }

  public static final int MARKET_IS_OPEN_HACKY_NOTIF_FIELD_NUMBER = 8;
  private String marketIsOpenHackyNotif_;
  /**
   * <code>optional string market_is_open_hacky_notif = 8;</code>
   */
  public String getMarketIsOpenHackyNotif() {
    return marketIsOpenHackyNotif_;
  }
  /**
   * <code>optional string market_is_open_hacky_notif = 8;</code>
   */
  public com.google.protobuf.ByteString
      getMarketIsOpenHackyNotifBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(marketIsOpenHackyNotif_);
  }
  /**
   * <code>optional string market_is_open_hacky_notif = 8;</code>
   */
  private void setMarketIsOpenHackyNotif(
      String value) {
    if (value == null) {
    throw new NullPointerException();
  }

    marketIsOpenHackyNotif_ = value;
  }
  /**
   * <code>optional string market_is_open_hacky_notif = 8;</code>
   */
  private void clearMarketIsOpenHackyNotif() {

    marketIsOpenHackyNotif_ = getDefaultInstance().getMarketIsOpenHackyNotif();
  }
  /**
   * <code>optional string market_is_open_hacky_notif = 8;</code>
   */
  private void setMarketIsOpenHackyNotifBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

    marketIsOpenHackyNotif_ = value.toStringUtf8();
  }

  public static final int MARKET_IS_CLOSED_HACKY_NOTIF_FIELD_NUMBER = 9;
  private String marketIsClosedHackyNotif_;
  /**
   * <code>optional string market_is_closed_hacky_notif = 9;</code>
   */
  public String getMarketIsClosedHackyNotif() {
    return marketIsClosedHackyNotif_;
  }
  /**
   * <code>optional string market_is_closed_hacky_notif = 9;</code>
   */
  public com.google.protobuf.ByteString
      getMarketIsClosedHackyNotifBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(marketIsClosedHackyNotif_);
  }
  /**
   * <code>optional string market_is_closed_hacky_notif = 9;</code>
   */
  private void setMarketIsClosedHackyNotif(
      String value) {
    if (value == null) {
    throw new NullPointerException();
  }

    marketIsClosedHackyNotif_ = value;
  }
  /**
   * <code>optional string market_is_closed_hacky_notif = 9;</code>
   */
  private void clearMarketIsClosedHackyNotif() {

    marketIsClosedHackyNotif_ = getDefaultInstance().getMarketIsClosedHackyNotif();
  }
  /**
   * <code>optional string market_is_closed_hacky_notif = 9;</code>
   */
  private void setMarketIsClosedHackyNotifBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

    marketIsClosedHackyNotif_ = value.toStringUtf8();
  }

  public static final int IS_MARKET_OPEN_FIELD_NUMBER = 10;
  private boolean isMarketOpen_;
  /**
   * <code>optional bool is_market_open = 10;</code>
   */
  public boolean getIsMarketOpen() {
    return isMarketOpen_;
  }
  /**
   * <code>optional bool is_market_open = 10;</code>
   */
  private void setIsMarketOpen(boolean value) {

    isMarketOpen_ = value;
  }
  /**
   * <code>optional bool is_market_open = 10;</code>
   */
  private void clearIsMarketOpen() {

    isMarketOpen_ = false;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (statusCode_ != LoginResponse.StatusCode.OK.getNumber()) {
      output.writeEnum(1, statusCode_);
    }
    if (!statusMessage_.isEmpty()) {
      output.writeString(2, getStatusMessage());
    }
    if (!sessionId_.isEmpty()) {
      output.writeString(3, getSessionId());
    }
    if (user_ != null) {
      output.writeMessage(4, getUser());
    }
    for (java.util.Map.Entry<Integer, Integer> entry
         : internalGetStocksOwned().entrySet()) {
      StocksOwnedDefaultEntryHolder.defaultEntry.serializeTo(
          output, 5, entry.getKey(), entry.getValue());
    }
    for (java.util.Map.Entry<Integer, Stock> entry
         : internalGetStockList().entrySet()) {
      StockListDefaultEntryHolder.defaultEntry.serializeTo(
          output, 6, entry.getKey(), entry.getValue());
    }
    for (java.util.Map.Entry<String, Integer> entry
         : internalGetConstants().entrySet()) {
      ConstantsDefaultEntryHolder.defaultEntry.serializeTo(
          output, 7, entry.getKey(), entry.getValue());
    }
    if (!marketIsOpenHackyNotif_.isEmpty()) {
      output.writeString(8, getMarketIsOpenHackyNotif());
    }
    if (!marketIsClosedHackyNotif_.isEmpty()) {
      output.writeString(9, getMarketIsClosedHackyNotif());
    }
    if (isMarketOpen_ != false) {
      output.writeBool(10, isMarketOpen_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (statusCode_ != LoginResponse.StatusCode.OK.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, statusCode_);
    }
    if (!statusMessage_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getStatusMessage());
    }
    if (!sessionId_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getSessionId());
    }
    if (user_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getUser());
    }
    for (java.util.Map.Entry<Integer, Integer> entry
         : internalGetStocksOwned().entrySet()) {
      size += StocksOwnedDefaultEntryHolder.defaultEntry.computeMessageSize(
        5, entry.getKey(), entry.getValue());
    }
    for (java.util.Map.Entry<Integer, Stock> entry
         : internalGetStockList().entrySet()) {
      size += StockListDefaultEntryHolder.defaultEntry.computeMessageSize(
        6, entry.getKey(), entry.getValue());
    }
    for (java.util.Map.Entry<String, Integer> entry
         : internalGetConstants().entrySet()) {
      size += ConstantsDefaultEntryHolder.defaultEntry.computeMessageSize(
        7, entry.getKey(), entry.getValue());
    }
    if (!marketIsOpenHackyNotif_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(8, getMarketIsOpenHackyNotif());
    }
    if (!marketIsClosedHackyNotif_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(9, getMarketIsClosedHackyNotif());
    }
    if (isMarketOpen_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, isMarketOpen_);
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static LoginResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static LoginResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static LoginResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static LoginResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static LoginResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static LoginResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static LoginResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static LoginResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static LoginResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static LoginResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(LoginResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code proto.LoginResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
              LoginResponse, Builder> implements
      // @@protoc_insertion_point(builder_implements:proto.LoginResponse)
          LoginResponseOrBuilder {
    // Construct using dalalstreet.api.actions.LoginResponse.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>optional .proto.LoginResponse.StatusCode status_code = 1;</code>
     */
    public int getStatusCodeValue() {
      return instance.getStatusCodeValue();
    }
    /**
     * <code>optional .proto.LoginResponse.StatusCode status_code = 1;</code>
     */
    public Builder setStatusCodeValue(int value) {
      copyOnWrite();
      instance.setStatusCodeValue(value);
      return this;
    }
    /**
     * <code>optional .proto.LoginResponse.StatusCode status_code = 1;</code>
     */
    public LoginResponse.StatusCode getStatusCode() {
      return instance.getStatusCode();
    }
    /**
     * <code>optional .proto.LoginResponse.StatusCode status_code = 1;</code>
     */
    public Builder setStatusCode(LoginResponse.StatusCode value) {
      copyOnWrite();
      instance.setStatusCode(value);
      return this;
    }
    /**
     * <code>optional .proto.LoginResponse.StatusCode status_code = 1;</code>
     */
    public Builder clearStatusCode() {
      copyOnWrite();
      instance.clearStatusCode();
      return this;
    }

    /**
     * <code>optional string status_message = 2;</code>
     */
    public String getStatusMessage() {
      return instance.getStatusMessage();
    }
    /**
     * <code>optional string status_message = 2;</code>
     */
    public com.google.protobuf.ByteString
        getStatusMessageBytes() {
      return instance.getStatusMessageBytes();
    }
    /**
     * <code>optional string status_message = 2;</code>
     */
    public Builder setStatusMessage(
        String value) {
      copyOnWrite();
      instance.setStatusMessage(value);
      return this;
    }
    /**
     * <code>optional string status_message = 2;</code>
     */
    public Builder clearStatusMessage() {
      copyOnWrite();
      instance.clearStatusMessage();
      return this;
    }
    /**
     * <code>optional string status_message = 2;</code>
     */
    public Builder setStatusMessageBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setStatusMessageBytes(value);
      return this;
    }

    /**
     * <code>optional string session_id = 3;</code>
     */
    public String getSessionId() {
      return instance.getSessionId();
    }
    /**
     * <code>optional string session_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSessionIdBytes() {
      return instance.getSessionIdBytes();
    }
    /**
     * <code>optional string session_id = 3;</code>
     */
    public Builder setSessionId(
        String value) {
      copyOnWrite();
      instance.setSessionId(value);
      return this;
    }
    /**
     * <code>optional string session_id = 3;</code>
     */
    public Builder clearSessionId() {
      copyOnWrite();
      instance.clearSessionId();
      return this;
    }
    /**
     * <code>optional string session_id = 3;</code>
     */
    public Builder setSessionIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSessionIdBytes(value);
      return this;
    }

    /**
     * <code>optional .proto.User user = 4;</code>
     */
    public boolean hasUser() {
      return instance.hasUser();
    }
    /**
     * <code>optional .proto.User user = 4;</code>
     */
    public User getUser() {
      return instance.getUser();
    }
    /**
     * <code>optional .proto.User user = 4;</code>
     */
    public Builder setUser(User value) {
      copyOnWrite();
      instance.setUser(value);
      return this;
      }
    /**
     * <code>optional .proto.User user = 4;</code>
     */
    public Builder setUser(
        User.Builder builderForValue) {
      copyOnWrite();
      instance.setUser(builderForValue);
      return this;
    }
    /**
     * <code>optional .proto.User user = 4;</code>
     */
    public Builder mergeUser(User value) {
      copyOnWrite();
      instance.mergeUser(value);
      return this;
    }
    /**
     * <code>optional .proto.User user = 4;</code>
     */
    public Builder clearUser() {  copyOnWrite();
      instance.clearUser();
      return this;
    }


    public int getStocksOwnedCount() {
      return instance.getStocksOwnedMap().size();
    }
    /**
     * <code>map&lt;uint32, int32&gt; stocks_owned = 5;</code>
     */

    public boolean containsStocksOwned(
        int key) {

      return instance.getStocksOwnedMap().containsKey(key);
    }

    public Builder clearStocksOwned() {
      copyOnWrite();
      instance.getMutableStocksOwnedMap().clear();
      return this;
    }
    /**
     * <code>map&lt;uint32, int32&gt; stocks_owned = 5;</code>
     */

    public Builder removeStocksOwned(
        int key) {

      copyOnWrite();
      instance.getMutableStocksOwnedMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getStocksOwnedMap()} instead.
     */
    @Deprecated
    public java.util.Map<Integer, Integer> getStocksOwned() {
      return getStocksOwnedMap();
    }
    /**
     * <code>map&lt;uint32, int32&gt; stocks_owned = 5;</code>
     */
    public java.util.Map<Integer, Integer> getStocksOwnedMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getStocksOwnedMap());
    }
    /**
     * <code>map&lt;uint32, int32&gt; stocks_owned = 5;</code>
     */

    public int getStocksOwnedOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<Integer, Integer> map =
          instance.getStocksOwnedMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, int32&gt; stocks_owned = 5;</code>
     */

    public int getStocksOwnedOrThrow(
        int key) {

      java.util.Map<Integer, Integer> map =
          instance.getStocksOwnedMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;uint32, int32&gt; stocks_owned = 5;</code>
     */
    public Builder putStocksOwned(
        int key,
        int value) {


      copyOnWrite();
      instance.getMutableStocksOwnedMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;uint32, int32&gt; stocks_owned = 5;</code>
     */
    public Builder putAllStocksOwned(
        java.util.Map<Integer, Integer> values) {
      copyOnWrite();
      instance.getMutableStocksOwnedMap().putAll(values);
      return this;
    }


    public int getStockListCount() {
      return instance.getStockListMap().size();
    }
    /**
     * <code>map&lt;uint32, .proto.Stock&gt; stock_list = 6;</code>
     */

    public boolean containsStockList(
        int key) {

      return instance.getStockListMap().containsKey(key);
    }

    public Builder clearStockList() {
      copyOnWrite();
      instance.getMutableStockListMap().clear();
      return this;
    }
    /**
     * <code>map&lt;uint32, .proto.Stock&gt; stock_list = 6;</code>
     */

    public Builder removeStockList(
        int key) {

      copyOnWrite();
      instance.getMutableStockListMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getStockListMap()} instead.
     */
    @Deprecated
    public java.util.Map<Integer, Stock> getStockList() {
      return getStockListMap();
    }
    /**
     * <code>map&lt;uint32, .proto.Stock&gt; stock_list = 6;</code>
     */
    public java.util.Map<Integer, Stock> getStockListMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getStockListMap());
    }
    /**
     * <code>map&lt;uint32, .proto.Stock&gt; stock_list = 6;</code>
     */

    public Stock getStockListOrDefault(
        int key,
        Stock defaultValue) {

      java.util.Map<Integer, Stock> map =
          instance.getStockListMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, .proto.Stock&gt; stock_list = 6;</code>
     */

    public Stock getStockListOrThrow(
        int key) {

      java.util.Map<Integer, Stock> map =
          instance.getStockListMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;uint32, .proto.Stock&gt; stock_list = 6;</code>
     */
    public Builder putStockList(
        int key,
        Stock value) {

      if (value == null) { throw new NullPointerException(); }
      copyOnWrite();
      instance.getMutableStockListMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;uint32, .proto.Stock&gt; stock_list = 6;</code>
     */
    public Builder putAllStockList(
        java.util.Map<Integer, Stock> values) {
      copyOnWrite();
      instance.getMutableStockListMap().putAll(values);
      return this;
    }


    public int getConstantsCount() {
      return instance.getConstantsMap().size();
    }
    /**
     * <code>map&lt;string, int32&gt; constants = 7;</code>
     */

    public boolean containsConstants(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return instance.getConstantsMap().containsKey(key);
    }

    public Builder clearConstants() {
      copyOnWrite();
      instance.getMutableConstantsMap().clear();
      return this;
    }
    /**
     * <code>map&lt;string, int32&gt; constants = 7;</code>
     */

    public Builder removeConstants(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      copyOnWrite();
      instance.getMutableConstantsMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getConstantsMap()} instead.
     */
    @Deprecated
    public java.util.Map<String, Integer> getConstants() {
      return getConstantsMap();
    }
    /**
     * <code>map&lt;string, int32&gt; constants = 7;</code>
     */
    public java.util.Map<String, Integer> getConstantsMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getConstantsMap());
    }
    /**
     * <code>map&lt;string, int32&gt; constants = 7;</code>
     */

    public int getConstantsOrDefault(
        String key,
        int defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Integer> map =
          instance.getConstantsMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int32&gt; constants = 7;</code>
     */

    public int getConstantsOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Integer> map =
          instance.getConstantsMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, int32&gt; constants = 7;</code>
     */
    public Builder putConstants(
        String key,
        int value) {
      if (key == null) { throw new NullPointerException(); }

      copyOnWrite();
      instance.getMutableConstantsMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, int32&gt; constants = 7;</code>
     */
    public Builder putAllConstants(
        java.util.Map<String, Integer> values) {
      copyOnWrite();
      instance.getMutableConstantsMap().putAll(values);
      return this;
    }

    /**
     * <code>optional string market_is_open_hacky_notif = 8;</code>
     */
    public String getMarketIsOpenHackyNotif() {
      return instance.getMarketIsOpenHackyNotif();
    }
    /**
     * <code>optional string market_is_open_hacky_notif = 8;</code>
     */
    public com.google.protobuf.ByteString
        getMarketIsOpenHackyNotifBytes() {
      return instance.getMarketIsOpenHackyNotifBytes();
    }
    /**
     * <code>optional string market_is_open_hacky_notif = 8;</code>
     */
    public Builder setMarketIsOpenHackyNotif(
        String value) {
      copyOnWrite();
      instance.setMarketIsOpenHackyNotif(value);
      return this;
    }
    /**
     * <code>optional string market_is_open_hacky_notif = 8;</code>
     */
    public Builder clearMarketIsOpenHackyNotif() {
      copyOnWrite();
      instance.clearMarketIsOpenHackyNotif();
      return this;
    }
    /**
     * <code>optional string market_is_open_hacky_notif = 8;</code>
     */
    public Builder setMarketIsOpenHackyNotifBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setMarketIsOpenHackyNotifBytes(value);
      return this;
    }

    /**
     * <code>optional string market_is_closed_hacky_notif = 9;</code>
     */
    public String getMarketIsClosedHackyNotif() {
      return instance.getMarketIsClosedHackyNotif();
    }
    /**
     * <code>optional string market_is_closed_hacky_notif = 9;</code>
     */
    public com.google.protobuf.ByteString
        getMarketIsClosedHackyNotifBytes() {
      return instance.getMarketIsClosedHackyNotifBytes();
    }
    /**
     * <code>optional string market_is_closed_hacky_notif = 9;</code>
     */
    public Builder setMarketIsClosedHackyNotif(
        String value) {
      copyOnWrite();
      instance.setMarketIsClosedHackyNotif(value);
      return this;
    }
    /**
     * <code>optional string market_is_closed_hacky_notif = 9;</code>
     */
    public Builder clearMarketIsClosedHackyNotif() {
      copyOnWrite();
      instance.clearMarketIsClosedHackyNotif();
      return this;
    }
    /**
     * <code>optional string market_is_closed_hacky_notif = 9;</code>
     */
    public Builder setMarketIsClosedHackyNotifBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setMarketIsClosedHackyNotifBytes(value);
      return this;
    }

    /**
     * <code>optional bool is_market_open = 10;</code>
     */
    public boolean getIsMarketOpen() {
      return instance.getIsMarketOpen();
    }
    /**
     * <code>optional bool is_market_open = 10;</code>
     */
    public Builder setIsMarketOpen(boolean value) {
      copyOnWrite();
      instance.setIsMarketOpen(value);
      return this;
    }
    /**
     * <code>optional bool is_market_open = 10;</code>
     */
    public Builder clearIsMarketOpen() {
      copyOnWrite();
      instance.clearIsMarketOpen();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:proto.LoginResponse)
  }
  protected final Object dynamicMethod(
      MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new LoginResponse();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        stocksOwned_.makeImmutable();
        stockList_.makeImmutable();
        constants_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        LoginResponse other = (LoginResponse) arg1;
        statusCode_ = visitor.visitInt(statusCode_ != 0, statusCode_,    other.statusCode_ != 0, other.statusCode_);
        statusMessage_ = visitor.visitString(!statusMessage_.isEmpty(), statusMessage_,
            !other.statusMessage_.isEmpty(), other.statusMessage_);
        sessionId_ = visitor.visitString(!sessionId_.isEmpty(), sessionId_,
            !other.sessionId_.isEmpty(), other.sessionId_);
        user_ = visitor.visitMessage(user_, other.user_);
        stocksOwned_ = visitor.visitMap(
            stocksOwned_, other.internalGetStocksOwned());
        stockList_ = visitor.visitMap(
            stockList_, other.internalGetStockList());
        constants_ = visitor.visitMap(
            constants_, other.internalGetConstants());
        marketIsOpenHackyNotif_ = visitor.visitString(!marketIsOpenHackyNotif_.isEmpty(), marketIsOpenHackyNotif_,
            !other.marketIsOpenHackyNotif_.isEmpty(), other.marketIsOpenHackyNotif_);
        marketIsClosedHackyNotif_ = visitor.visitString(!marketIsClosedHackyNotif_.isEmpty(), marketIsClosedHackyNotif_,
            !other.marketIsClosedHackyNotif_.isEmpty(), other.marketIsClosedHackyNotif_);
        isMarketOpen_ = visitor.visitBoolean(isMarketOpen_ != false, isMarketOpen_,
            other.isMarketOpen_ != false, other.isMarketOpen_);
        if (visitor == MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();

                statusCode_ = rawValue;
                break;
              }
              case 18: {
                String s = input.readStringRequireUtf8();

                statusMessage_ = s;
                break;
              }
              case 26: {
                String s = input.readStringRequireUtf8();

                sessionId_ = s;
                break;
              }
              case 34: {
                User.Builder subBuilder = null;
                if (user_ != null) {
                  subBuilder = user_.toBuilder();
                }
                user_ = input.readMessage(User.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(user_);
                  user_ = subBuilder.buildPartial();
                }

                break;
              }
              case 42: {
                if (!stocksOwned_.isMutable()) {
                  stocksOwned_ = stocksOwned_.mutableCopy();
                }
                StocksOwnedDefaultEntryHolder.defaultEntry.parseInto(stocksOwned_, input, extensionRegistry);  break;
              }
              case 50: {
                if (!stockList_.isMutable()) {
                  stockList_ = stockList_.mutableCopy();
                }
                StockListDefaultEntryHolder.defaultEntry.parseInto(stockList_, input, extensionRegistry);  break;
              }
              case 58: {
                if (!constants_.isMutable()) {
                  constants_ = constants_.mutableCopy();
                }
                ConstantsDefaultEntryHolder.defaultEntry.parseInto(constants_, input, extensionRegistry);  break;
              }
              case 66: {
                String s = input.readStringRequireUtf8();

                marketIsOpenHackyNotif_ = s;
                break;
              }
              case 74: {
                String s = input.readStringRequireUtf8();

                marketIsClosedHackyNotif_ = s;
                break;
              }
              case 80: {

                isMarketOpen_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (LoginResponse.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:proto.LoginResponse)
  private static final LoginResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new LoginResponse();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static LoginResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<LoginResponse> PARSER;

  public static com.google.protobuf.Parser<LoginResponse> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

