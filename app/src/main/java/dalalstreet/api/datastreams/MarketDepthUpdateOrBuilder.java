// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datastreams/MarketDepth.proto

package dalalstreet.api.datastreams;

public interface MarketDepthUpdateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:proto.MarketDepthUpdate)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <code>optional uint32 stock_id = 1;</code>
   */
  int getStockId();

  /**
   * <code>map&lt;uint32, uint32&gt; ask_depth = 2;</code>
   */
  int getAskDepthCount();
  /**
   * <code>map&lt;uint32, uint32&gt; ask_depth = 2;</code>
   */
  boolean containsAskDepth(
          int key);
  /**
   * Use {@link #getAskDepthMap()} instead.
   */
  @Deprecated
  java.util.Map<Integer, Integer>
  getAskDepth();
  /**
   * <code>map&lt;uint32, uint32&gt; ask_depth = 2;</code>
   */
  java.util.Map<Integer, Integer>
  getAskDepthMap();
  /**
   * <code>map&lt;uint32, uint32&gt; ask_depth = 2;</code>
   */

  int getAskDepthOrDefault(
          int key,
          int defaultValue);
  /**
   * <code>map&lt;uint32, uint32&gt; ask_depth = 2;</code>
   */

  int getAskDepthOrThrow(
          int key);

  /**
   * <code>map&lt;uint32, uint32&gt; bid_depth = 3;</code>
   */
  int getBidDepthCount();
  /**
   * <code>map&lt;uint32, uint32&gt; bid_depth = 3;</code>
   */
  boolean containsBidDepth(
          int key);
  /**
   * Use {@link #getBidDepthMap()} instead.
   */
  @Deprecated
  java.util.Map<Integer, Integer>
  getBidDepth();
  /**
   * <code>map&lt;uint32, uint32&gt; bid_depth = 3;</code>
   */
  java.util.Map<Integer, Integer>
  getBidDepthMap();
  /**
   * <code>map&lt;uint32, uint32&gt; bid_depth = 3;</code>
   */

  int getBidDepthOrDefault(
          int key,
          int defaultValue);
  /**
   * <code>map&lt;uint32, uint32&gt; bid_depth = 3;</code>
   */

  int getBidDepthOrThrow(
          int key);

  /**
   * <code>map&lt;uint32, int32&gt; ask_depth_diff = 4;</code>
   */
  int getAskDepthDiffCount();
  /**
   * <code>map&lt;uint32, int32&gt; ask_depth_diff = 4;</code>
   */
  boolean containsAskDepthDiff(
          int key);
  /**
   * Use {@link #getAskDepthDiffMap()} instead.
   */
  @Deprecated
  java.util.Map<Integer, Integer>
  getAskDepthDiff();
  /**
   * <code>map&lt;uint32, int32&gt; ask_depth_diff = 4;</code>
   */
  java.util.Map<Integer, Integer>
  getAskDepthDiffMap();
  /**
   * <code>map&lt;uint32, int32&gt; ask_depth_diff = 4;</code>
   */

  int getAskDepthDiffOrDefault(
          int key,
          int defaultValue);
  /**
   * <code>map&lt;uint32, int32&gt; ask_depth_diff = 4;</code>
   */

  int getAskDepthDiffOrThrow(
          int key);

  /**
   * <code>map&lt;uint32, int32&gt; bid_depth_diff = 5;</code>
   */
  int getBidDepthDiffCount();
  /**
   * <code>map&lt;uint32, int32&gt; bid_depth_diff = 5;</code>
   */
  boolean containsBidDepthDiff(
          int key);
  /**
   * Use {@link #getBidDepthDiffMap()} instead.
   */
  @Deprecated
  java.util.Map<Integer, Integer>
  getBidDepthDiff();
  /**
   * <code>map&lt;uint32, int32&gt; bid_depth_diff = 5;</code>
   */
  java.util.Map<Integer, Integer>
  getBidDepthDiffMap();
  /**
   * <code>map&lt;uint32, int32&gt; bid_depth_diff = 5;</code>
   */

  int getBidDepthDiffOrDefault(
          int key,
          int defaultValue);
  /**
   * <code>map&lt;uint32, int32&gt; bid_depth_diff = 5;</code>
   */

  int getBidDepthDiffOrThrow(
          int key);

  /**
   * <code>repeated .proto.Trade latest_trades = 6;</code>
   */
  java.util.List<Trade>
      getLatestTradesList();
  /**
   * <code>repeated .proto.Trade latest_trades = 6;</code>
   */
  Trade getLatestTrades(int index);
  /**
   * <code>repeated .proto.Trade latest_trades = 6;</code>
   */
  int getLatestTradesCount();

  /**
   * <code>repeated .proto.Trade latest_trades_diff = 7;</code>
   */
  java.util.List<Trade>
      getLatestTradesDiffList();
  /**
   * <code>repeated .proto.Trade latest_trades_diff = 7;</code>
   */
  Trade getLatestTradesDiff(int index);
  /**
   * <code>repeated .proto.Trade latest_trades_diff = 7;</code>
   */
  int getLatestTradesDiffCount();
}
